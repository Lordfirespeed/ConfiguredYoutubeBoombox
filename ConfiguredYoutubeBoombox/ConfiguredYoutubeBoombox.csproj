<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>com.github.lordfirespeed.configured_youtube_boombox</AssemblyName>
    <Product>Configured Youtube Boombox</Product>
    <LangVersion>12</LangVersion>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>bin</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <!-- prevent referenced assemblies from being copied to the output folder -->
  <Target Name="ClearReferenceCopyLocalPaths" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>
  
  <ItemGroup>
    <PackageReference Include="MinVer" Version="4.3.0" PrivateAssets="all" />
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.1.0" />
    <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>
  
  <ItemGroup Condition="$(CI) != 'true'">
    <Reference Include="Assembly-CSharp" Publicize="true">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Unity.InputSystem">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Unity.InputSystem.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Netcode.Runtime">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Unity.Netcode.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="LC_API.dll">
      <HintPath>$(TEST_PROFILE_DIR)\BepInEx\plugins\2018-LC_API\LC_API.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="$(CI) == 'true'">
    <PackageReference Include="LethalCompany.GameLibs.Steam" Version="45.0.2-alpha.1" />
    <PackageReference Include="u_2018.LethalCompany.LC-AP" Version="0.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Include="$(ProjectDir)YoutubeDLSharp/Options/autoconvert.py" />
  </ItemGroup>

  <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
    <Message Importance="high" Text="MinVer version is $(MinVerVersion)" />
    <PropertyGroup>
      <BepInExPluginVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</BepInExPluginVersion>
    </PropertyGroup>
  </Target>

  <Target Name="NetcodeWeave" AfterTargets="PostBuildEvent">
    <CallTarget Condition="$(OS) == 'Windows_NT'" Targets="NetcodeWeaveWindows" />
    <CallTarget Condition="$(OS) != 'Windows_NT'" Targets="NetcodeWeaveUnix" />
    <Message Importance="high" Text="Successfully weaved NetCode!" />
  </Target>

  <Target Name="NetcodeWeaveWindows">
    <Exec Command="cd $(NETCODE_PATCHER_DIR)&#xD;&#xA;NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>

  <Target Name="NetcodeWeaveUnix">
    <Exec Command="cd $(NETCODE_PATCHER_DIR)&#xD;&#xA;dotnet NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>

  <Target Name="PackThunderstore" AfterTargets="NetcodeWeave" Condition="$(PACK_THUNDERSTORE) == 'true'">
    <Message Importance="high" Text="MinVer version is $(MinVerVersion)" />
    <PropertyGroup>
      <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
    </PropertyGroup>
    <Exec Command="tcli build --config-path $(SolutionDir)assets/thunderstore.toml --package-version $(PlainVersion)" />
    <ItemGroup>
      <FilesToRename Include="$(SolutionDir)dist/*-$(PlainVersion).zip" />
    </ItemGroup>
    <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
  </Target>
  
</Project>